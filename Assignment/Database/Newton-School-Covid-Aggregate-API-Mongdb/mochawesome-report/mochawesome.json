{
  "stats": {
    "suites": 2,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-20T12:48:28.542Z",
    "end": "2020-11-20T12:48:28.959Z",
    "duration": 417,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "75c02776-44f3-450e-b672-e002b552c889",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 254,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "fs.copyFileSync(path.join(__dirname, '..', 'src', 'index.js'), path.join(__dirname, 'index.js'), 0, () => {\n    console.log('sucess')\n})\nserver = require('./index')\nawait refreshAll()",
          "err": {},
          "uuid": "19af8f87-79a8-4b97-8b92-6728194028d5",
          "parentUUID": "75c02776-44f3-450e-b672-e002b552c889",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
          "title": "Checking the Return Values.",
          "fullFile": "C:\\Users\\hites\\Documents\\NewtonOfficial\\Nodejs\\covid-tally-api\\Covid-Aggregate-API-Mongdb-Solution\\__tests__\\test1.test.js",
          "file": "\\__tests__\\test1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /healthyStates should return expected number of records",
              "fullTitle": "Checking the Return Values. GET /healthyStates should return expected number of records",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/healthyStates').then(res => {\n    expect(res.body.data.length).to.eq(5)\n})",
              "err": {},
              "uuid": "96630d5e-6df2-4529-a25e-a76338eb35c2",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /healthyStates should return the data in the expected format",
              "fullTitle": "Checking the Return Values. GET /healthyStates should return the data in the expected format",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/healthyStates').then(res => {\n    expect(Object.keys(res.body.data[0])).to.have.members(['_id', 'state', 'mortality'])\n})",
              "err": {},
              "uuid": "2c9c66f2-93b5-42cf-b641-9f3a30b227b8",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /healthyStates should return the value of mortality according to the formulae.",
              "fullTitle": "Checking the Return Values. GET /healthyStates should return the value of mortality according to the formulae.",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/healthyStates').then(res => {\n    expect(parseFloat(res.body.data[0].mortality.toFixed(5))).to.eq(0.00361)\n})",
              "err": {},
              "uuid": "0bb5c4d7-dbb6-4a3b-add4-f9a3adcbb9e7",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /healthyStates should return the value of mortality rounded to 5th decimal point.",
              "fullTitle": "Checking the Return Values. GET /healthyStates should return the value of mortality rounded to 5th decimal point.",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/healthyStates').then(res => {\n    expect(res.body.data[0].mortality).to.eq(0.00361)\n})",
              "err": {},
              "uuid": "15022913-318a-4686-85ed-799ff9ec4363",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /newHotspotStates should return expected number of records",
              "fullTitle": "Checking the Return Values. GET /newHotspotStates should return expected number of records",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/newHotspotStates').then(res => {\n    expect(res.body.data.length).to.eq(10)\n})",
              "err": {},
              "uuid": "05c5ed0b-63e0-4d0a-8b39-21aae973be96",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /newHotspotStates should return the data with required fields(_id,rate,state)",
              "fullTitle": "Checking the Return Values. GET /newHotspotStates should return the data with required fields(_id,rate,state)",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/newHotspotStates').then(res => {\n    expect(Object.keys(res.body.data[0])).to.have.members(['_id', 'state', 'rate'])\n})",
              "err": {},
              "uuid": "e95b4ad8-216f-4abe-83cc-6920904ea542",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /newHotspotStates should return the value of rate according to the formulae.",
              "fullTitle": "Checking the Return Values. GET /newHotspotStates should return the value of rate according to the formulae.",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/newHotspotStates').then(res => {\n    expect(parseFloat(res.body.data[0].rate.toFixed(5))).to.eq(0.12888)\n})",
              "err": {},
              "uuid": "218304f9-f8c9-4de9-b330-a3002903eb4d",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /newHotspotStates should return the value of rate rounded to 5th decimal point.",
              "fullTitle": "Checking the Return Values. GET /newHotspotStates should return the value of rate rounded to 5th decimal point.",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/newHotspotStates').then(res => {\n    expect(res.body.data[0].rate).to.eq(0.12888)\n})",
              "err": {},
              "uuid": "6be96123-2bd0-4464-8f91-8112bc78489d",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalRecovered should return expected fields",
              "fullTitle": "Checking the Return Values. GET /totalRecovered should return expected fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalRecovered').then(res => {\n    expect(Object.keys(res.body.data)).to.have.members(['_id', 'recovered'])\n})",
              "err": {},
              "uuid": "268d9c36-4112-4f66-9104-6a60938d2846",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalRecovered should return expected sum of recovered patients",
              "fullTitle": "Checking the Return Values. GET /totalRecovered should return expected sum of recovered patients",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalRecovered').then(res => {\n    expect(res.body.data.recovered).to.eq(8427016)\n})",
              "err": {},
              "uuid": "ba14da5f-8157-4b70-a51f-1b4081130e64",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalDeath should return expected fields",
              "fullTitle": "Checking the Return Values. GET /totalDeath should return expected fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalDeath').then(res => {\n    expect(Object.keys(res.body.data)).to.have.members(['_id', 'death'])\n})",
              "err": {},
              "uuid": "287482eb-7f4e-4d6a-b85c-ec45aa88571b",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalDeath should return expected sum of recovered patients",
              "fullTitle": "Checking the Return Values. GET /totalDeath should return expected sum of recovered patients",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalDeath').then(res => {\n    expect(res.body.data.death).to.eq(132202)\n})",
              "err": {},
              "uuid": "fc35f8ef-aa8a-431b-af3c-d8f17f52c23b",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalActive should return expected fields",
              "fullTitle": "Checking the Return Values. GET /totalActive should return expected fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalActive').then(res => {\n    expect(Object.keys(res.body.data)).to.have.members(['_id', 'active'])\n})",
              "err": {},
              "uuid": "4ddb3114-aabb-4b75-b27a-4f97dabf7b30",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /totalActive should return expected sum of recovered patients",
              "fullTitle": "Checking the Return Values. GET /totalActive should return expected sum of recovered patients",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await chai.request('localhost:8080').get('/totalActive').then(res => {\n    expect(res.body.data.active).to.eq(577309)\n})",
              "err": {},
              "uuid": "c62a82ab-d7ab-4374-9a2b-8a7154b35a84",
              "parentUUID": "92fdcc0a-d7f4-4f0e-9c84-5cae47496c7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96630d5e-6df2-4529-a25e-a76338eb35c2",
            "2c9c66f2-93b5-42cf-b641-9f3a30b227b8",
            "0bb5c4d7-dbb6-4a3b-add4-f9a3adcbb9e7",
            "15022913-318a-4686-85ed-799ff9ec4363",
            "05c5ed0b-63e0-4d0a-8b39-21aae973be96",
            "e95b4ad8-216f-4abe-83cc-6920904ea542",
            "218304f9-f8c9-4de9-b330-a3002903eb4d",
            "6be96123-2bd0-4464-8f91-8112bc78489d",
            "268d9c36-4112-4f66-9104-6a60938d2846",
            "ba14da5f-8157-4b70-a51f-1b4081130e64",
            "287482eb-7f4e-4d6a-b85c-ec45aa88571b",
            "fc35f8ef-aa8a-431b-af3c-d8f17f52c23b",
            "4ddb3114-aabb-4b75-b27a-4f97dabf7b30",
            "c62a82ab-d7ab-4374-9a2b-8a7154b35a84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 104,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "1c8e2355-320f-4103-b850-b1bbcb5fa33f",
          "title": "Illegal commands Check",
          "fullFile": "C:\\Users\\hites\\Documents\\NewtonOfficial\\Nodejs\\covid-tally-api\\Covid-Aggregate-API-Mongdb-Solution\\__tests__\\test1.test.js",
          "file": "\\__tests__\\test1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should not use find,findOne query",
              "fullTitle": "Illegal commands Check Should not use find,findOne query",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(findCounter.called).to.eq(false)",
              "err": {},
              "uuid": "b2b6069f-1b83-480f-9479-b1c45167b29e",
              "parentUUID": "1c8e2355-320f-4103-b850-b1bbcb5fa33f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not use update query",
              "fullTitle": "Illegal commands Check Should not use update query",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(updateCouter.called).to.eq(false)",
              "err": {},
              "uuid": "6c1fa52f-58ba-427d-b2fd-b2531b1129b7",
              "parentUUID": "1c8e2355-320f-4103-b850-b1bbcb5fa33f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2b6069f-1b83-480f-9479-b1c45167b29e",
            "6c1fa52f-58ba-427d-b2fd-b2531b1129b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}