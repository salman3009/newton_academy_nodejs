MERN - MongoDB Expressjs Reactjs Nodejs 
MongoBD-Database
Expressjs - Framework of Nodejs 
Reactjs - Javascript library 
Nodejs - runtime environment for javascript/It is used for serverside language as well.
chrome browser - v8 engine 
By using nodejs --> you can compile the javascript outside the browser as well,
====================================
For Reactjs,angular,vuejs we are using nodejs to run the complex code outside browser and we 
are using webpack to convert into minified file.
===========================================================
Nodejs is serverside language as well.
1.we can able to interact with file system.
2.we can able to interact with database system.
3.we can able to interact with network system. 
4.Internally Nodejs is written in c++.
===================================================
npm - node package manager / yarn 
//it is central repository for javascript developers.
===============================================
Nodejs is single thread 
Java is multi thread 
======================================
thread - process in exection
Nodejs is non blocking I/O operation 
Nodje architecture:
1.Event loop 
2.Event Queue 
3.Internal Thread Pool 
==================================
Javascript which is running on inside the browser we have only one thread 
Javascript which is running on outside the browser we have only one thread + internal thread pool if blocking operation is there.
============================================================
Event Loop Nodejs:
https://dev.to/endeavourmonk/nodejs-event-loop-46oo
https://www.youtube.com/watch?v=y0aTs56DJWk

Node.js is designed to be non-blocking and asynchronous, which allows it to efficiently handle a large number of I/O-bound operations without getting blocked by any single operation.

1.
Event loop 
//manages all the asynchronous operations
//new events in the event queue

2.
Event Queue
//holds various types of events, such as callbacks, timers, and I/O events,
//These events are added to the queue when they are triggered but are not executed immediately.

3.
Callbacks:
Callbacks are functions that are provided as arguments to asynchronous functions

4.
I/O Operations
reading from or writing to files, making network requests
it does not block the execution of the rest of the program. Instead, it delegates the I/O operation to the operating system and registers a callback to be executed when the operation is complete.

5.
CPU-bound operations can still block the event loop and should be offloaded to worker threads or other processes to maintain the responsiveness of the application


======================================================
Event Driven:
https://www.geeksforgeeks.org/explain-event-driven-programming-in-node-js/

A callback function ( called an event handler) is called when an event is triggered.
An event loop that listens for event triggers and calls the corresponding event handler for that event.

These ‘events’ can be accessed via the ‘events’ module and the EventEmitter class.
Most of the in-built modules of Node.js inherit from the EventEmitter class

The idea is simple – emitter objects send out named events, which trigger listeners that have already been registered
===============================================================
REST API:
https://www.geeksforgeeks.org/what-is-rest-api-in-node-js/
Notes:
API:
The API (Application Programming Interface) is a set of commands, functions, 
or protocols that act as an intermediary that enables two applications to communicate

REST: 
REST stands for REpresentational State Transfer
Representational State transfer means the transfer of the state of the Representation of the resource. 
These representations are transferred via HTTP through various formats, including  JSON (Javascript Object Notation), HTML,XML or plain text. 
The most popular file format is JSON because it can be read both by humans and machines

REST works on the HTTP Protocol
The resource can be accessed by the URI (Uniform Resource Identifier) or the URL
methods POST, GET, PUT, PATCH, and DELETE.

Benefits:
Separate client and server
REST is independent of platform and languages.
Flexibility and scalability
Not constrained by one data format.
The HTTP cache can be used to optimize the network and increase efficiency.
Easy to use and learn
=========================================================